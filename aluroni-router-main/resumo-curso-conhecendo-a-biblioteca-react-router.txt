react-router-dom

Em uma aplicação com HTML, CSS e JS puro, a criação de diferentes páginas seria feita com diversos HTML refeitos do zero, 
send conectados através da tag "a", e usando modules para relativisar as variáveis, com React, usamos o react-router-dom,
trabalhando com o modelo SPA "single page application", usamos o router-dom para otmizar a navegação entre diferentes rotas,
além de podermos reaproveitar componentes, com Router-dom não utilizamos a tag "a" para mudança de rotas e sim o componente
LINK, sua diferença para "a" é que o "a": Renderiza o HTML por completo, oque vai contra a finalidade do React, que é mudar
apenas oque for necessário para otimizar a performace, o Link, atende esse requisíto pois quando utilizamos ele, o React
através do VIRTUAL DOM verifica qual componente foi alterado e renderiza apenas aquela parte, reaproveitando os 
componentes anteriores.

UseNagivate

Esse é um hook de react-router-dom, ele é utilizado para navegar em páginas "guardadas" pelo historico de navegações anteriores,
imagine q seu cliente caiu em uma rota que não existe e você configurou um NotFound, e nesse componente você deseja
que ele seja redicionado a rota anterior através de um botão, o useNavigate serve para isso, ele recebe parâmetro como,
string(nome da rota que você pode ser redirecionado) ou número(-1 = rota anterior, 1 rota à frente);

Parâmetros do useNavigate: ('Nome da rota ou número da camada de rota desejada', replace: true or false, state: {obj})
O replace serve para trocar a camada da rota atual com a camda da rota anterior, assim tornando indisponivel a volta para 
o caminho anterior (-1), isso é válido quando temos uma tela de login e após o usuario ter sido logado, não fará mais
sentido que ele volte a rota de login.

O state retorna um estado de algum objeto ou outro tipo de variável que pode ser pertinente caso queiramos usar seus dados
para exibir de alguma forma na tela.

O componente <Navigate /> é um componente q tem como metodos os mesmos do useNavigate puro, ele pode ser usado para 
redicionar o usuario para outra rota, exemplo: caso não exista tal valor, <Navigate to="/"/>, isso redirecionará
o usuário para a Home.

useParams

Este recurso retorna todos os parametros de um rota que foram criados pelo desenvolvedor através de '/rota:parametro'.

useParams retorna: {
  parametro: valorDoParametro
}

Como renderizar um componente especifico apenas quando o valor do parâmetro for valido

Imagine que você quer renderizar uma rota apenas caso o "state" dela tiver um valor válido, caso contrárop você quer 
retornar um componente <NotFound />, você pode usar um children opcional no seu Componente com Outlet, ae caso o valor seja
válido, você pode passar esse children ou caso contrário só retorne <NotFound />, ou você pode criar um Routes com um Route 
dentro do Componente que deseja renderizar, com o path="*". Caso o valor seja válido esse Route rederizará da forma correta.

 
